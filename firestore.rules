rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isModerator() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'moderator';
    }
    
    function isAdminOrModerator() {
      return isAdmin() || isModerator();
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && (isOwner(userId) || isAdminOrModerator());
      allow create: if isAuthenticated() && isAdminOrModerator();
      allow update: if isAuthenticated() && (isOwner(userId) || isAdminOrModerator());
      allow delete: if isAuthenticated() && isAdmin();
    }

    // Avatars collection
    match /avatars/{avatarId} {
      allow read: if true; // Public read access for avatars
      allow write: if isAuthenticated() && isAdminOrModerator();
    }

    // Admin activity logs
    match /admin_activity_logs/{logId} {
      allow read: if isAuthenticated() && isAdminOrModerator();
      allow write: if isAuthenticated() && isAdminOrModerator();
    }

    // Stream logs
    match /stream_logs/{logId} {
      allow read: if isAuthenticated() && (isOwner(resource.data.userId) || isAdminOrModerator());
      allow create: if isAuthenticated();
    }
  }
} 